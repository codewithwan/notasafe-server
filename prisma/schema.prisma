generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  receipts Receipt[]
}

model Receipt {
  id            String   @id @default(uuid()) @db.Uuid
  userId        String   @db.Uuid
  storeId       String   @db.Uuid
  totalAmount   Decimal
  paymentMethod String
  purchaseDate  DateTime
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user        User          @relation(fields: [userId], references: [id])
  store       Store         @relation(fields: [storeId], references: [id])
  ReceiptItem ReceiptItem[]
}

model ReceiptItem {
  id        String  @id @default(uuid()) @db.Uuid
  receiptId String  @db.Uuid
  productId String? @db.Uuid
  name      String
  price     Decimal
  quantity  Int

  receipt Receipt  @relation(fields: [receiptId], references: [id])
  product Product? @relation(fields: [productId], references: [id])
}

model Product {
  id           String         @id @default(uuid()) @db.Uuid
  name         String
  category     String?
  priceHistory PriceHistory[]

  receiptItems ReceiptItem[]
}

model PriceHistory {
  id        String   @id @default(uuid()) @db.Uuid
  productId String   @db.Uuid
  storeId   String   @db.Uuid
  price     Decimal
  date      DateTime @default(now())

  product Product @relation(fields: [productId], references: [id])
  store   Store   @relation(fields: [storeId], references: [id])
}

model Store {
  id       String  @id @default(uuid()) @db.Uuid
  name     String
  location String?

  receipts       Receipt[]
  priceHistories PriceHistory[]
}
